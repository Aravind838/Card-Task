{"version":3,"sources":["People.js","App.js","serviceWorker.js","index.js"],"names":["People","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","peoplelist","errorMsg","searchTerm","searchHandler","bind","assertThisInitialized","event","setState","target","value","_this2","axios","get","then","response","console","log","data","results","catch","error","_this$state","react_default","a","createElement","style","textAlign","TextField","width","label","type","onChange","margin","length","filter","x","name","toLowerCase","includes","searchingFor","map","people","marginLeft","marginBottom","key","Card_default","border","Body","ListGroup_default","variant","Item","marginRight","height","mass","hair_color","skin_color","eye_color","birth_year","gender","Link","href","homeworld","films","species","vehicles","starships","created","edited","url","idx","Alert_default","Component","App","className","src_People","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3649a543.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction searchingFor(searchTerm) {\r\n     return function(x) {\r\n          return x.name.toLowerCase().includes(searchTerm.toLowerCase()) || !searchTerm;\r\n     }\r\n}\r\n\r\nclass People extends Component {\r\n   constructor(props) {\r\n        super(props)\r\n   \r\n        this.state = {\r\n              peoplelist: [],\r\n              errorMsg: '',\r\n              searchTerm: ''\r\n        }\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n   }\r\n\r\n   searchHandler(event) {\r\n        this.setState({searchTerm: event.target.value})\r\n   }\r\n\r\n   componentDidMount() {\r\n        axios.get('https://swapi.co/api/people/.')\r\n           .then(response => {\r\n                console.log(response)\r\n                this.setState({peoplelist: response.data.results})\r\n           })\r\n           .catch(error => {\r\n                console.log(error)\r\n                this.setState({errorMsg: 'Error retreiving data'})\r\n           })\r\n   }\r\n     \r\n   render() {\r\n        const { peoplelist, errorMsg, searchTerm } = this.state;\r\n        console.log(this.state.peoplelist);\r\n        return (\r\n             <div>\r\n                 <form style={{textAlign: 'center'}}>\r\n                     <TextField style={{width:'328px'}} label=\"Filter...\" type=\"search\" onChange={this.searchHandler} value={searchTerm} margin=\"normal\"/>\r\n                 </form>\r\n                  {\r\n                       peoplelist.length ? \r\n                       peoplelist.filter(searchingFor(searchTerm)).map(people => \r\n                          <div style={{marginLeft: '28.5%', marginBottom: '6px'}} key={people.name}>\r\n                             <Card border=\"success\" style={{ width: '33rem' }}>\r\n                                <Card.Body>\r\n                                   <ListGroup variant=\"flush\">\r\n                                      <ListGroup.Item><strong style={{marginRight: '18.5%'}}>Name :- </strong>{people.name}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong style={{marginRight: '17%'}}>Height :- </strong>{people.height}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong style={{marginRight: '20.5%'}}>Mass :- </strong>{people.mass}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong style={{marginRight: '10%'}}>Hair Colour :- </strong>{people.hair_color}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong style={{marginRight: '10.5%'}}>Skin Colour :- </strong>{people.skin_color}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong style={{marginRight: '11.5%'}}>Eye Colour :- </strong>{people.eye_color}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong style={{marginRight: '12.5%'}}>Birth Year :- </strong>{people.birth_year}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong style={{marginRight: '17.5%'}}>Gender :- </strong>{people.gender}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong style={{marginRight: '10%'}}>Homeworld :- </strong>\r\n                                          <Card.Link href=\"\">{people.homeworld}</Card.Link>\r\n                                      </ListGroup.Item>\r\n                                      <ListGroup.Item><strong>Films :- </strong>\r\n                                          <Card.Link href=\"\">{people.films[0]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.films[1]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.films[2]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.films[3]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.films[4]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.films[5]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.films[6]}</Card.Link>\r\n                                      </ListGroup.Item>                    \r\n                                      <ListGroup.Item><strong>Species :- </strong>\r\n                                          <Card.Link href=\"\">{people.species}</Card.Link>\r\n                                      </ListGroup.Item>\r\n                                      <ListGroup.Item><strong>Vehicles :- </strong>\r\n                                          <Card.Link href=\"\">{people.vehicles[0]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.vehicles[1]}</Card.Link>\r\n                                      </ListGroup.Item>\r\n                                      <ListGroup.Item><strong>Starships :- </strong>\r\n                                          <Card.Link href=\"\">{people.starships[0]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.starships[1]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.starships[2]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.starships[3]}</Card.Link>\r\n                                          <Card.Link href=\"\">{people.starships[4]}</Card.Link>\r\n                                      </ListGroup.Item>\r\n                                      <ListGroup.Item><strong>Created :- </strong>{people.created}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong>Edited :- </strong>{people.edited}</ListGroup.Item>\r\n                                      <ListGroup.Item><strong>Url :- </strong>\r\n                                          <Card.Link href=\"\">{people.url}</Card.Link>\r\n                                      </ListGroup.Item>\r\n                                   </ListGroup>\r\n                                </Card.Body>\r\n                              </Card>\r\n                          </div>) :\r\n                       null\r\n                  }\r\n                  { errorMsg ? [ 'danger' ].map((idx) => ( \r\n                                  <Alert style={{textAlign: 'center'}} key={idx} variant='danger'> <strong>{errorMsg}!</strong> </Alert>\r\n                           ))\r\n                 : null}\r\n             </div>\r\n        )\r\n   }\r\n}\r\n\r\nexport default People;","import React,{Component} from 'react';\nimport './App.css';\nimport People from './People';\n\nclass App extends Component {\n render() { \n  return (\n    <div className=\"App\">\n        <h2 style={{textAlign: \"center\"}}>People List</h2>\n        <People />\n    </div>\n  );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}